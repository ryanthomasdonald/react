{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateDriver } from \"../actions/builderActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport Fade from \"react-reveal/Fade\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const driverState = useSelector(state => state.builderReducer.driver);\n  const kartState = useSelector(state => state.builderReducer.kart);\n  const tireState = useSelector(state => state.builderReducer.tire);\n  const gliderState = useSelector(state => state.builderReducer.glider);\n  const dispatch = useDispatch(); // useEffect(() => {          // example of syntax if needed\n  //     return () => {\n  //         cleanup\n  //     }\n  // }, [])\n\n  const karts = MKData.filter(item => item.type === \"kart\");\n  const drivers = MKData.filter(item => item.type === \"driver\");\n  const tires = MKData.filter(item => item.type === \"tire\");\n  const gliders = MKData.filter(item => item.type === \"glider\"); // const grabOption = () => {\n  //     let val = \n  // }\n\n  var select = document.getElementById('language');\n  var value = select.options[select.selectedIndex].value;\n  console.log(value);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        top: true,\n        cascade: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `img/items/${driverState.img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"POST\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"drivers\",\n            id: \"drivers\",\n            children: drivers.map(driver => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: driver,\n                children: driver.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 32\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            value: \"submit\",\n            onSubmit: () => dispatch(updateDriver()),\n            children: \"Update Driver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `img/items/${kartState.img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"karts\",\n          id: \"cars\",\n          children: karts.map(kart => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: kart,\n              children: kart.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `img/items/${tireState.img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tires\",\n          id: \"cars\",\n          children: tires.map(tire => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tire,\n              children: tire.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `img/items/${gliderState.img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"gliders\",\n          id: \"cars\",\n          children: gliders.map(glider => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: glider,\n              children: glider.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: {\n        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n        datasets: [{\n          label: \"Driver\",\n          data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n          backgroundColor: ['rgba(0, 70, 240, 0.8)'],\n          borderColor: ['rgba(0, 70, 240, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Body\",\n          data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n          backgroundColor: ['rgba(10, 191, 2, 0.8)'],\n          borderColor: ['rgba(10, 191, 2, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Tire\",\n          data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n          backgroundColor: ['rgba(255, 245, 16, 0.8)'],\n          borderColor: ['rgba(255, 245, 16, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Glider\",\n          data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n          backgroundColor: ['rgba(254, 56, 55, 0.8)'],\n          borderColor: ['rgba(254, 56, 55, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 100,\n      options: {\n        // indexAxis: \"y\",\n        maintainAspectRatio: true,\n        layout: {\n          padding: 40\n        },\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'left',\n            reverse: true,\n            labels: {\n              color: 'rgba(255, 255, 255)',\n              boxHeight: 30 // padding: 50\n\n            }\n          }\n        },\n        scales: {\n          x: {\n            stacked: true,\n            ticks: {\n              color: 'rgba(255, 255, 255)'\n            }\n          },\n          y: {\n            stacked: true,\n            ticks: {\n              color: 'rgba(255, 255, 255)'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Builder, \"K+5zSzeBrA1zekqT+BXfYZEG1a4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder; // 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useSelector","useDispatch","updateDriver","Chart","MKData","Fade","Builder","driverState","state","builderReducer","driver","kartState","kart","tireState","tire","gliderState","glider","dispatch","karts","filter","item","type","drivers","tires","gliders","select","document","getElementById","value","options","selectedIndex","console","log","img","map","name","labels","datasets","label","data","wg","ac","on","of","mt","sl","sw","sa","sg","tl","tw","ta","tg","backgroundColor","borderColor","borderWidth","maintainAspectRatio","layout","padding","responsive","plugins","legend","position","reverse","color","boxHeight","scales","x","stacked","ticks","y"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {updateDriver} from \"../actions/builderActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\n\nconst Builder = () => {\n    const driverState = useSelector(state => state.builderReducer.driver)\n    const kartState = useSelector(state => state.builderReducer.kart)\n    const tireState = useSelector(state => state.builderReducer.tire)\n    const gliderState = useSelector(state => state.builderReducer.glider)\n    const dispatch = useDispatch()\n    // useEffect(() => {          // example of syntax if needed\n    //     return () => {\n    //         cleanup\n    //     }\n    // }, [])\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n    \n    // const grabOption = () => {\n    //     let val = \n    // }\n    var select = document.getElementById('language');\nvar value = select.options[select.selectedIndex].value;\nconsole.log(value);\n    return (\n    <>\n        <div>\n            <Fade top cascade>\n                <img src={`img/items/${driverState.img}`} />\n                <form method=\"POST\">\n                <select name=\"drivers\" id=\"drivers\">\n                    {drivers.map(driver => {\n                        return <option value={driver}>{driver.name}</option>\n                    })}\n                </select>\n                <button type=\"button\" value=\"submit\" onSubmit={() => dispatch(updateDriver())}>Update Driver</button>\n                </form>\n                <img src={`img/items/${kartState.img}`} />\n                <select name=\"karts\" id=\"cars\">\n                    {karts.map(kart => {\n                        return <option value={kart}>{kart.name}</option>\n                    })}\n                </select>\n                <img src={`img/items/${tireState.img}`} />\n                <select name=\"tires\" id=\"cars\">\n                    {tires.map(tire => {\n                        return <option value={tire}>{tire.name}</option>\n                    })}\n                </select>\n                <img src={`img/items/${gliderState.img}`} />\n                <select name=\"gliders\" id=\"cars\">\n                    {gliders.map(glider => {\n                        return <option value={glider}>{glider.name}</option>\n                    })}\n                </select>\n            </Fade>\n        </div>\n        <Chart \n            type=\"bar\"\n            data={{\n                labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                datasets: [\n                    {\n                        label: \"Driver\",\n                        data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                        backgroundColor: [\n                            'rgba(0, 70, 240, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(0, 70, 240, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Body\",\n                        data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                        backgroundColor: [\n                            'rgba(10, 191, 2, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(10, 191, 2, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Tire\",\n                        data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                        backgroundColor: [\n                            'rgba(255, 245, 16, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 245, 16, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Glider\",\n                        data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                        backgroundColor: [\n                            'rgba(254, 56, 55, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(254, 56, 55, 1)',\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            }}\n            height={100}\n            options={{\n                // indexAxis: \"y\",\n                maintainAspectRatio: true,\n                layout: {\n                    padding: 40\n                },\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'left',\n                        reverse: true,\n                        labels: {\n                            color: 'rgba(255, 255, 255)',\n                            boxHeight: 30,\n                            // padding: 50\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    },\n                    y: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    }\n                }\n            }}\n        />\n    </>\n    )\n}\n\nexport default Builder\n\n// 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',"]},"metadata":{},"sourceType":"module"}