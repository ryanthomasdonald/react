{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateDriver, updateKart, updateTire, updateGlider } from \"../actions/builderActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport Fade from \"react-reveal/Fade\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const [formDriver, setFormDriver] = useState({});\n  const [formKart, setFormKart] = useState({});\n  const [formTire, setFormTire] = useState({});\n  const [formGlider, setFormGlider] = useState({});\n  const driverState = useSelector(state => state.builderReducer.driver);\n  const kartState = useSelector(state => state.builderReducer.kart);\n  const tireState = useSelector(state => state.builderReducer.tire);\n  const gliderState = useSelector(state => state.builderReducer.glider);\n  const dispatch = useDispatch(); // useEffect(() => {          // example of syntax if needed\n  //     return () => {\n  //         cleanup\n  //     }\n  // }, [])\n\n  const karts = MKData.filter(item => item.type === \"kart\");\n  const drivers = MKData.filter(item => item.type === \"driver\");\n  const tires = MKData.filter(item => item.type === \"tire\");\n  const gliders = MKData.filter(item => item.type === \"glider\"); // const grabOption = () => {\n  //     let val = \n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        top: true,\n        cascade: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `img/items/${driverState.img}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"drivers\",\n                id: \"drivers\",\n                value: formDriver,\n                onChange: e => setFormDriver(e.target.value),\n                children: drivers.map(driver => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver.id,\n                    children: driver.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 40\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                value: \"submit\",\n                onClick: () => dispatch(updateDriver(formDriver)),\n                children: \"Update Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `img/items/${kartState.img}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"karts\",\n                id: \"karts\",\n                value: formKart,\n                onChange: e => setFormKart(e.target.value),\n                children: karts.map(kart => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: kart.id,\n                    children: kart.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 40\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                value: \"submit\",\n                onClick: () => dispatch(updateKart(formKart)),\n                children: \"Update Kart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `img/items/${tireState.img}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"tires\",\n                id: \"tires\",\n                value: formTire,\n                onChange: e => setFormTire(e.target.value),\n                children: tires.map(tire => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: tire.id,\n                    children: tire.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 40\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                value: \"submit\",\n                onClick: () => dispatch(updateDriver(formDriver)),\n                children: \"Update Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `img/items/${driverState.img}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"drivers\",\n                id: \"drivers\",\n                value: formDriver,\n                onChange: e => setFormDriver(e.target.value),\n                children: drivers.map(driver => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: driver.id,\n                    children: driver.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 40\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                value: \"submit\",\n                onClick: () => dispatch(updateDriver(formDriver)),\n                children: \"Update Driver\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: {\n        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n        datasets: [{\n          label: \"Driver\",\n          data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n          backgroundColor: ['rgba(0, 70, 240, 0.8)'],\n          borderColor: ['rgba(0, 70, 240, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Body\",\n          data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n          backgroundColor: ['rgba(10, 191, 2, 0.8)'],\n          borderColor: ['rgba(10, 191, 2, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Tire\",\n          data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n          backgroundColor: ['rgba(255, 245, 16, 0.8)'],\n          borderColor: ['rgba(255, 245, 16, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Glider\",\n          data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n          backgroundColor: ['rgba(254, 56, 55, 0.8)'],\n          borderColor: ['rgba(254, 56, 55, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 100,\n      options: {\n        // indexAxis: \"y\",\n        maintainAspectRatio: true,\n        layout: {\n          padding: 40\n        },\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'left',\n            reverse: true,\n            labels: {\n              color: 'rgba(255, 255, 255)',\n              boxHeight: 30 // padding: 50\n\n            }\n          }\n        },\n        scales: {\n          x: {\n            stacked: true,\n            ticks: {\n              color: 'rgba(255, 255, 255)'\n            }\n          },\n          y: {\n            stacked: true,\n            ticks: {\n              color: 'rgba(255, 255, 255)'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Builder, \"0L628w2Miy9QS9n+AXoUryHrMRc=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder; // 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useState","useSelector","useDispatch","updateDriver","updateKart","updateTire","updateGlider","Chart","MKData","Fade","Builder","formDriver","setFormDriver","formKart","setFormKart","formTire","setFormTire","formGlider","setFormGlider","driverState","state","builderReducer","driver","kartState","kart","tireState","tire","gliderState","glider","dispatch","karts","filter","item","type","drivers","tires","gliders","img","e","target","value","map","id","name","labels","datasets","label","data","wg","ac","on","of","mt","sl","sw","sa","sg","tl","tw","ta","tg","backgroundColor","borderColor","borderWidth","maintainAspectRatio","layout","padding","responsive","plugins","legend","position","reverse","color","boxHeight","scales","x","stacked","ticks","y"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {updateDriver, updateKart, updateTire, updateGlider} from \"../actions/builderActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\n\nconst Builder = () => {\n    const [formDriver, setFormDriver] = useState({})\n    const [formKart, setFormKart] = useState({})\n    const [formTire, setFormTire] = useState({})\n    const [formGlider, setFormGlider] = useState({})\n    const driverState = useSelector(state => state.builderReducer.driver)\n    const kartState = useSelector(state => state.builderReducer.kart)\n    const tireState = useSelector(state => state.builderReducer.tire)\n    const gliderState = useSelector(state => state.builderReducer.glider)\n    const dispatch = useDispatch()\n    // useEffect(() => {          // example of syntax if needed\n    //     return () => {\n    //         cleanup\n    //     }\n    // }, [])\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n    \n    // const grabOption = () => {\n    //     let val = \n    // }\n\n    return (\n    <>\n        <div>\n            <Fade top cascade>\n                <div className=\"row\">\n                    <form>\n                        <div>\n                            <img src={`img/items/${driverState.img}`} />\n                        </div>\n                        <div>\n                        <select name=\"drivers\" id=\"drivers\" value={formDriver} onChange={(e) => setFormDriver(e.target.value)}>\n                            {drivers.map(driver => {\n                                return <option value={driver.id}>{driver.name}</option>\n                            })}\n                        </select><br />\n                        <button type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(formDriver))}>Update Driver</button>\n                        </div>\n                    </form>\n                    <form>\n                        <div>\n                            <img src={`img/items/${kartState.img}`} />\n                        </div>\n                        <div>\n                        <select name=\"karts\" id=\"karts\" value={formKart} onChange={(e) => setFormKart(e.target.value)}>\n                            {karts.map(kart => {\n                                return <option value={kart.id}>{kart.name}</option>\n                            })}\n                        </select><br />\n                        <button type=\"button\" value=\"submit\" onClick={() => dispatch(updateKart(formKart))}>Update Kart</button>\n                        </div>\n                    </form>\n                    <form>\n                        <div>\n                            <img src={`img/items/${tireState.img}`} />\n                        </div>\n                        <div>\n                        <select name=\"tires\" id=\"tires\" value={formTire} onChange={(e) => setFormTire(e.target.value)}>\n                            {tires.map(tire => {\n                                return <option value={tire.id}>{tire.name}</option>\n                            })}\n                        </select><br />\n                        <button type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(formDriver))}>Update Driver</button>\n                        </div>\n                    </form>\n                    <form>\n                        <div>\n                            <img src={`img/items/${driverState.img}`} />\n                        </div>\n                        <div>\n                        <select name=\"drivers\" id=\"drivers\" value={formDriver} onChange={(e) => setFormDriver(e.target.value)}>\n                            {drivers.map(driver => {\n                                return <option value={driver.id}>{driver.name}</option>\n                            })}\n                        </select><br />\n                        <button type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(formDriver))}>Update Driver</button>\n                        </div>\n                    </form>\n                </div>\n            </Fade>\n        </div>\n        <Chart \n            type=\"bar\"\n            data={{\n                labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                datasets: [\n                    {\n                        label: \"Driver\",\n                        data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                        backgroundColor: [\n                            'rgba(0, 70, 240, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(0, 70, 240, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Body\",\n                        data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                        backgroundColor: [\n                            'rgba(10, 191, 2, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(10, 191, 2, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Tire\",\n                        data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                        backgroundColor: [\n                            'rgba(255, 245, 16, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 245, 16, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Glider\",\n                        data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                        backgroundColor: [\n                            'rgba(254, 56, 55, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(254, 56, 55, 1)',\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            }}\n            height={100}\n            options={{\n                // indexAxis: \"y\",\n                maintainAspectRatio: true,\n                layout: {\n                    padding: 40\n                },\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'left',\n                        reverse: true,\n                        labels: {\n                            color: 'rgba(255, 255, 255)',\n                            boxHeight: 30,\n                            // padding: 50\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    },\n                    y: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    }\n                }\n            }}\n        />\n    </>\n    )\n}\n\nexport default Builder\n\n// 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',"]},"metadata":{},"sourceType":"module"}