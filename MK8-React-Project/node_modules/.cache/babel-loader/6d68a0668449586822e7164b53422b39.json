{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sampleAction } from \"../actions/templateActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const count = useSelector(state => state.templateReducer.count);\n  const dispatch = useDispatch(); // useEffect(() => {          // example of syntax if needed\n  //     return () => {\n  //         cleanup\n  //     }\n  // }, [])\n  // const gliders = MKData.gliders.forEach(glider => {\n  //     return glider\n  // })\n  // console.log(MKData)\n\n  console.log(MKData);\n  const karts = MKData.filter(item => kart);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: {\n        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n        datasets: [{\n          label: \"Driver\",\n          data: [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1],\n          backgroundColor: ['rgba(0, 70, 240, 0.75)'],\n          borderColor: ['rgba(0, 70, 240, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Body\",\n          data: [3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3],\n          backgroundColor: ['rgba(10, 191, 2, 0.75)'],\n          borderColor: ['rgba(10, 191, 2, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Tire\",\n          data: [4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4],\n          backgroundColor: ['rgba(255, 245, 16, 0.75)'],\n          borderColor: ['rgba(255, 245, 16, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Glider\",\n          data: [2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2],\n          backgroundColor: ['rgba(254, 56, 55, 0.75)'],\n          borderColor: ['rgba(254, 56, 55, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 100,\n      options: {\n        maintainAspectRatio: true,\n        layout: {\n          padding: 20\n        },\n        responsive: true,\n        scales: {\n          x: {\n            stacked: true\n          },\n          y: {\n            stacked: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Builder, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder; // 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useSelector","useDispatch","sampleAction","Chart","MKData","Builder","count","state","templateReducer","dispatch","console","log","karts","filter","item","kart","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","maintainAspectRatio","layout","padding","responsive","scales","x","stacked","y"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {sampleAction} from \"../actions/templateActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\n\nconst Builder = () => {\n    const count = useSelector(state => state.templateReducer.count)\n    const dispatch = useDispatch()\n    // useEffect(() => {          // example of syntax if needed\n    //     return () => {\n    //         cleanup\n    //     }\n    // }, [])\n    // const gliders = MKData.gliders.forEach(glider => {\n    //     return glider\n    // })\n    // console.log(MKData)\n\n    console.log(MKData)\n    const karts = MKData.filter(item => kart)\n    return (\n    <>\n        <Chart \n            type=\"bar\"\n            data={{\n                labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                datasets: [\n                    {\n                        label: \"Driver\",\n                        data: [1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1],\n                        backgroundColor: [\n                            'rgba(0, 70, 240, 0.75)',\n                        ],\n                        borderColor: [\n                            'rgba(0, 70, 240, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Body\",\n                        data: [3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3],\n                        backgroundColor: [\n                            'rgba(10, 191, 2, 0.75)',\n                        ],\n                        borderColor: [\n                            'rgba(10, 191, 2, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Tire\",\n                        data: [4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4],\n                        backgroundColor: [\n                            'rgba(255, 245, 16, 0.75)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 245, 16, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Glider\",\n                        data: [2, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2],\n                        backgroundColor: [\n                            'rgba(254, 56, 55, 0.75)',\n                        ],\n                        borderColor: [\n                            'rgba(254, 56, 55, 1)',\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            }}\n            height={100}\n            options={{\n                maintainAspectRatio: true,\n                layout: {\n                    padding: 20\n                },\n                responsive: true,\n                scales: {\n                    x: {\n                        stacked: true,\n                    },\n                    y: {\n                        stacked: true\n                    }\n                }\n            }}\n        />\n    </>\n    )\n}\n\nexport default Builder\n\n// 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',"]},"metadata":{},"sourceType":"module"}