{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadInit, updateDriver, updateKart, updateTire, updateGlider } from \"../actions/builderActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport Fade from \"react-reveal/Fade\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const [formDriver, setFormDriver] = useState(41);\n  const [formKart, setFormKart] = useState(1);\n  const [formTire, setFormTire] = useState(84);\n  const [formGlider, setFormGlider] = useState(105);\n  const driverState = useSelector(state => state.builderReducer.driver);\n  const kartState = useSelector(state => state.builderReducer.kart);\n  const tireState = useSelector(state => state.builderReducer.tire);\n  const gliderState = useSelector(state => state.builderReducer.glider);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadInit());\n  }, []);\n  const karts = MKData.filter(item => item.type === \"kart\");\n  const drivers = MKData.filter(item => item.type === \"driver\");\n  const tires = MKData.filter(item => item.type === \"tire\");\n  const gliders = MKData.filter(item => item.type === \"glider\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        top: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row mx-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `img/items/${driverState.img}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"drivers\",\n                  id: \"drivers\",\n                  value: formDriver,\n                  onChange: e => setFormDriver(e.target.value),\n                  children: drivers.map(driver => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: driver.id,\n                      children: driver.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 40\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-primary text-white\",\n                  type: \"button\",\n                  value: \"submit\",\n                  onClick: () => dispatch(updateDriver(parseInt(formDriver))),\n                  children: \"Update Driver\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `img/items/${kartState.img}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"karts\",\n                  id: \"karts\",\n                  value: formKart,\n                  onChange: e => setFormKart(e.target.value),\n                  children: karts.map(kart => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: kart.id,\n                      children: kart.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 57,\n                      columnNumber: 40\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-success text-white\",\n                  type: \"button\",\n                  value: \"submit\",\n                  onClick: () => dispatch(updateKart(parseInt(formKart))),\n                  children: \"Update Kart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `img/items/${tireState.img}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"tires\",\n                  id: \"tires\",\n                  value: formTire,\n                  onChange: e => setFormTire(e.target.value),\n                  children: tires.map(tire => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: tire.id,\n                      children: tire.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 72,\n                      columnNumber: 40\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-warning text-white\",\n                  type: \"button\",\n                  value: \"submit\",\n                  onClick: () => dispatch(updateTire(parseInt(formTire))),\n                  children: \"Update Tire\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `img/items/${gliderState.img}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                  name: \"gliders\",\n                  id: \"gliders\",\n                  value: formGlider,\n                  onChange: e => setFormGlider(e.target.value),\n                  children: gliders.map(glider => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: glider.id,\n                      children: glider.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 40\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn btn-danger text-white\",\n                  type: \"button\",\n                  value: \"submit\",\n                  onClick: () => dispatch(updateGlider(parseInt(formGlider))),\n                  children: \"Update Glider\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"bar\",\n      data: {\n        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n        datasets: [{\n          label: \"Driver\",\n          data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n          backgroundColor: ['rgba(0, 70, 240, 0.8)'],\n          borderColor: ['rgba(0, 70, 240, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Body\",\n          data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n          backgroundColor: ['rgba(10, 191, 2, 0.8)'],\n          borderColor: ['rgba(10, 191, 2, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Tire\",\n          data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n          backgroundColor: ['rgba(255, 245, 16, 0.8)'],\n          borderColor: ['rgba(255, 245, 16, 1)'],\n          borderWidth: 1\n        }, {\n          label: \"Glider\",\n          data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n          backgroundColor: ['rgba(254, 56, 55, 0.8)'],\n          borderColor: ['rgba(254, 56, 55, 1)'],\n          borderWidth: 1\n        }]\n      },\n      height: 40,\n      width: 100,\n      options: {\n        // indexAxis: \"y\",\n        maintainAspectRatio: true,\n        layout: {\n          padding: 40\n        },\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'bottom',\n            reverse: false,\n            labels: {\n              color: 'rgba(255, 255, 255)',\n              boxHeight: 30 // padding: 50\n\n            }\n          }\n        },\n        scales: {\n          x: {\n            stacked: true,\n            ticks: {\n              color: 'rgba(255, 255, 255)'\n            }\n          },\n          y: {\n            stacked: true,\n            ticks: {\n              color: 'rgba(255, 255, 255)'\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Builder, \"Qm7fYC/BoNvon09jHT1onFSLJNw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder; // 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useState","useSelector","useDispatch","loadInit","updateDriver","updateKart","updateTire","updateGlider","Chart","MKData","Fade","Button","Form","Builder","formDriver","setFormDriver","formKart","setFormKart","formTire","setFormTire","formGlider","setFormGlider","driverState","state","builderReducer","driver","kartState","kart","tireState","tire","gliderState","glider","dispatch","karts","filter","item","type","drivers","tires","gliders","img","e","target","value","map","id","name","parseInt","labels","datasets","label","data","wg","ac","on","of","mt","sl","sw","sa","sg","tl","tw","ta","tg","backgroundColor","borderColor","borderWidth","maintainAspectRatio","layout","padding","responsive","plugins","legend","position","reverse","color","boxHeight","scales","x","stacked","ticks","y"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {loadInit, updateDriver, updateKart, updateTire, updateGlider} from \"../actions/builderActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst Builder = () => {\n    const [formDriver, setFormDriver] = useState(41)\n    const [formKart, setFormKart] = useState(1)\n    const [formTire, setFormTire] = useState(84)\n    const [formGlider, setFormGlider] = useState(105)\n    const driverState = useSelector(state => state.builderReducer.driver)\n    const kartState = useSelector(state => state.builderReducer.kart)\n    const tireState = useSelector(state => state.builderReducer.tire)\n    const gliderState = useSelector(state => state.builderReducer.glider)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadInit())\n    }, [])\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n\n    return (\n    <>\n        <div>\n            <Fade top>\n                <div className=\"row mx-0\">\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form className=\"justify-content-center\">\n                        <div>\n                            <img src={`img/items/${driverState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select name=\"drivers\" id=\"drivers\" value={formDriver} onChange={(e) => setFormDriver(e.target.value)}>\n                            {drivers.map(driver => {\n                                return <option value={driver.id}>{driver.name}</option>\n                            })}\n                        </Form.Select>\n                        <Button className=\"btn btn-primary text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(parseInt(formDriver)))}>Update Driver</Button>\n                        </div>\n                    </Form>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form>\n                        <div>\n                            <img src={`img/items/${kartState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select name=\"karts\" id=\"karts\" value={formKart} onChange={(e) => setFormKart(e.target.value)}>\n                            {karts.map(kart => {\n                                return <option value={kart.id}>{kart.name}</option>\n                            })}\n                        </Form.Select>\n                        <Button className=\"btn btn-success text-white\"type=\"button\" value=\"submit\" onClick={() => dispatch(updateKart(parseInt(formKart)))}>Update Kart</Button>\n                        </div>\n                    </Form>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form>\n                        <div>\n                            <img src={`img/items/${tireState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select name=\"tires\" id=\"tires\" value={formTire} onChange={(e) => setFormTire(e.target.value)}>\n                            {tires.map(tire => {\n                                return <option value={tire.id}>{tire.name}</option>\n                            })}\n                        </Form.Select><br />\n                        <Button className=\"btn btn-warning text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateTire(parseInt(formTire)))}>Update Tire</Button>\n                        </div>\n                    </Form>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form>\n                        <div>\n                            <img src={`img/items/${gliderState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select name=\"gliders\" id=\"gliders\" value={formGlider} onChange={(e) => setFormGlider(e.target.value)}>\n                            {gliders.map(glider => {\n                                return <option value={glider.id}>{glider.name}</option>\n                            })}\n                        </Form.Select><br />\n                        <Button className=\"btn btn-danger text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateGlider(parseInt(formGlider)))}>Update Glider</Button>\n                        </div>\n                    </Form>\n                    </div>\n                </div>\n            </Fade>\n        </div>\n        <Chart \n            type=\"bar\"\n            data={{\n                labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                datasets: [\n                    {\n                        label: \"Driver\",\n                        data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                        backgroundColor: [\n                            'rgba(0, 70, 240, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(0, 70, 240, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Body\",\n                        data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                        backgroundColor: [\n                            'rgba(10, 191, 2, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(10, 191, 2, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Tire\",\n                        data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                        backgroundColor: [\n                            'rgba(255, 245, 16, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 245, 16, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Glider\",\n                        data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                        backgroundColor: [\n                            'rgba(254, 56, 55, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(254, 56, 55, 1)',\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            }}\n            height={40}\n            width={100}\n            options={{\n                // indexAxis: \"y\",\n                maintainAspectRatio: true,\n                layout: {\n                    padding: 40\n                },\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'bottom',\n                        reverse: false,\n                        labels: {\n                            color: 'rgba(255, 255, 255)',\n                            boxHeight: 30,\n                            // padding: 50\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    },\n                    y: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    }\n                }\n            }}\n        />\n    </>\n    )\n}\n\nexport default Builder\n\n// 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',"]},"metadata":{},"sourceType":"module"}