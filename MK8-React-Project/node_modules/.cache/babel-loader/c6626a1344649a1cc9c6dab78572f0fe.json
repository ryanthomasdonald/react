{"ast":null,"code":"var React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nmodule.exports = {\n  createClass: function (chartType, methodNames, dataKey) {\n    var classData = {\n      displayName: chartType + 'Chart',\n      getInitialState: function () {\n        return {};\n      },\n      render: function () {\n        var _props = {\n          ref: 'canvass'\n        };\n\n        for (var name in this.props) {\n          if (this.props.hasOwnProperty(name)) {\n            if (name !== 'data' && name !== 'options') {\n              _props[name] = this.props[name];\n            }\n          }\n        }\n\n        return React.createElement('canvas', _props);\n      }\n    };\n    var extras = ['clear', 'stop', 'resize', 'toBase64Image', 'generateLegend', 'update', 'addData', 'removeData'];\n\n    function extra(type) {\n      classData[type] = function () {\n        return this.state.chart[type].apply(this.state.chart, arguments);\n      };\n    }\n\n    classData.componentDidMount = function () {\n      this.initializeChart(this.props);\n    };\n\n    classData.componentWillUnmount = function () {\n      var chart = this.state.chart;\n      chart.destroy();\n    };\n\n    classData.componentWillReceiveProps = function (nextProps) {\n      var chart = this.state.chart;\n\n      if (nextProps.redraw) {\n        chart.destroy();\n        this.initializeChart(nextProps);\n      } else {\n        dataKey = dataKey || dataKeys[chart.name];\n        updatePoints(nextProps, chart, dataKey);\n\n        if (chart.scale) {\n          chart.scale.xLabels = nextProps.data.labels;\n          chart.scale.calculateXLabelRotation();\n        }\n\n        chart.update();\n      }\n    };\n\n    classData.initializeChart = function (nextProps) {\n      var Chart = require('chart.js');\n\n      var el = ReactDOM.findDOMNode(this);\n      var ctx = el.getContext(\"2d\");\n      var chart = new Chart(ctx)[chartType](nextProps.data, nextProps.options || {});\n      this.state.chart = chart;\n    }; // return the chartjs instance\n\n\n    classData.getChart = function () {\n      return this.state.chart;\n    }; // return the canvass element that contains the chart\n\n\n    classData.getCanvass = function () {\n      return this.refs.canvass;\n    };\n\n    classData.getCanvas = classData.getCanvass;\n    var i;\n\n    for (i = 0; i < extras.length; i++) {\n      extra(extras[i]);\n    }\n\n    for (i = 0; i < methodNames.length; i++) {\n      extra(methodNames[i]);\n    }\n\n    return React.createClass(classData);\n  }\n};\nvar dataKeys = {\n  'Line': 'points',\n  'Radar': 'points',\n  'Bar': 'bars'\n};\n\nvar updatePoints = function (nextProps, chart, dataKey) {\n  var name = chart.name;\n\n  if (name === 'PolarArea' || name === 'Pie' || name === 'Doughnut') {\n    nextProps.data.forEach(function (segment, segmentIndex) {\n      if (!chart.segments[segmentIndex]) {\n        chart.addData(segment);\n      } else {\n        Object.keys(segment).forEach(function (key) {\n          chart.segments[segmentIndex][key] = segment[key];\n        });\n      }\n    });\n  } else {\n    while (chart.scale.xLabels.length > nextProps.data.labels.length) {\n      chart.removeData();\n    }\n\n    nextProps.data.datasets.forEach(function (set, setIndex) {\n      set.data.forEach(function (val, pointIndex) {\n        if (typeof chart.datasets[setIndex][dataKey][pointIndex] == \"undefined\") {\n          addData(nextProps, chart, setIndex, pointIndex);\n        } else {\n          chart.datasets[setIndex][dataKey][pointIndex].value = val;\n        }\n      });\n    });\n  }\n};\n\nvar addData = function (nextProps, chart, setIndex, pointIndex) {\n  var values = [];\n  nextProps.data.datasets.forEach(function (set) {\n    values.push(set.data[pointIndex]);\n  });\n  chart.addData(values, nextProps.data.labels[setIndex]);\n};","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/node_modules/react-chart.js/lib/core.js"],"names":["React","require","ReactDOM","module","exports","createClass","chartType","methodNames","dataKey","classData","displayName","getInitialState","render","_props","ref","name","props","hasOwnProperty","createElement","extras","extra","type","state","chart","apply","arguments","componentDidMount","initializeChart","componentWillUnmount","destroy","componentWillReceiveProps","nextProps","redraw","dataKeys","updatePoints","scale","xLabels","data","labels","calculateXLabelRotation","update","Chart","el","findDOMNode","ctx","getContext","options","getChart","getCanvass","refs","canvass","getCanvas","i","length","forEach","segment","segmentIndex","segments","addData","Object","keys","key","removeData","datasets","set","setIndex","val","pointIndex","value","values","push"],"mappings":"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","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\n\nmodule.exports = {\n  createClass: function(chartType, methodNames, dataKey) {\n    var classData = {\n      displayName: chartType + 'Chart',\n      getInitialState: function() { return {}; },\n      render: function() {\n        var _props = {\n          ref: 'canvass'\n        };\n        for (var name in this.props) {\n          if (this.props.hasOwnProperty(name)) {\n            if (name !== 'data' && name !== 'options') {\n              _props[name] = this.props[name];\n            }\n          }\n        }\n        return React.createElement('canvas', _props);\n      }\n    };\n\n    var extras = ['clear', 'stop', 'resize', 'toBase64Image', 'generateLegend', 'update', 'addData', 'removeData'];\n    function extra(type) {\n      classData[type] = function() {\n        return this.state.chart[type].apply(this.state.chart, arguments);\n      };\n    }\n\n    classData.componentDidMount = function() {\n      this.initializeChart(this.props);\n    };\n\n    classData.componentWillUnmount = function() {\n      var chart = this.state.chart;\n      chart.destroy();\n    };\n\n    classData.componentWillReceiveProps = function(nextProps) {\n      var chart = this.state.chart;\n      if (nextProps.redraw) {\n        chart.destroy();\n        this.initializeChart(nextProps);\n      } else {\n        dataKey = dataKey || dataKeys[chart.name];\n        updatePoints(nextProps, chart, dataKey);\n\n        if (chart.scale) {\n          chart.scale.xLabels = nextProps.data.labels;\n          chart.scale.calculateXLabelRotation();\n        }\n\n        chart.update();\n      }\n    };\n\n    classData.initializeChart = function(nextProps) {\n      var Chart = require('chart.js');\n      var el = ReactDOM.findDOMNode(this);\n      var ctx = el.getContext(\"2d\");\n      var chart = new Chart(ctx)[chartType](nextProps.data, nextProps.options || {});\n      this.state.chart = chart;\n    };\n\n    // return the chartjs instance\n    classData.getChart = function() {\n      return this.state.chart;\n    };\n\n    // return the canvass element that contains the chart\n    classData.getCanvass = function() {\n      return this.refs.canvass;\n    };\n\n    classData.getCanvas = classData.getCanvass;\n\n    var i;\n    for (i=0; i<extras.length; i++) {\n      extra(extras[i]);\n    }\n    for (i=0; i<methodNames.length; i++) {\n      extra(methodNames[i]);\n    }\n\n    return React.createClass(classData);\n  }\n};\n\nvar dataKeys = {\n  'Line': 'points',\n  'Radar': 'points',\n  'Bar': 'bars'\n};\n\nvar updatePoints = function(nextProps, chart, dataKey) {\n  var name = chart.name;\n\n  if (name === 'PolarArea' || name === 'Pie' || name === 'Doughnut') {\n    nextProps.data.forEach(function(segment, segmentIndex) {\n      if (!chart.segments[segmentIndex]) {\n        chart.addData(segment);\n      } else {\n        Object.keys(segment).forEach(function (key) {\n          chart.segments[segmentIndex][key] = segment[key];\n        });\n      }\n    });\n  } else {\n    while (chart.scale.xLabels.length > nextProps.data.labels.length) {\n      chart.removeData();\n    }\n    nextProps.data.datasets.forEach(function(set, setIndex) {\n      set.data.forEach(function(val, pointIndex) {\n        if (typeof(chart.datasets[setIndex][dataKey][pointIndex]) == \"undefined\") {\n          addData(nextProps, chart, setIndex, pointIndex);\n        } else {\n          chart.datasets[setIndex][dataKey][pointIndex].value = val;\n        }\n      });\n    });\n  }\n};\n\nvar addData = function(nextProps, chart, setIndex, pointIndex) {\n  var values = [];\n  nextProps.data.datasets.forEach(function(set) {\n    values.push(set.data[pointIndex]);\n  });\n  chart.addData(values, nextProps.data.labels[setIndex]);\n};\n"]},"metadata":{},"sourceType":"script"}