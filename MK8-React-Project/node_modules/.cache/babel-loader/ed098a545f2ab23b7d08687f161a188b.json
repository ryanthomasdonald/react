{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sampleAction } from \"../actions/templateActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport Fade from \"react-reveal/Fade\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const driverState = useSelector(state => state.sampleReducer.driver);\n  const kartState = useSelector(state => state.templateReducer.kart);\n  const tireState = useSelector(state => state.templateReducer.tire);\n  const gliderState = useSelector(state => state.templateReducer.glider);\n  const dispatch = useDispatch(); // useEffect(() => {          // example of syntax if needed\n  //     return () => {\n  //         cleanup\n  //     }\n  // }, [])\n\n  console.log(driverState);\n  const karts = MKData.filter(item => item.type === \"kart\");\n  const drivers = MKData.filter(item => item.type === \"driver\");\n  const tires = MKData.filter(item => item.type === \"tire\");\n  const gliders = MKData.filter(item => item.type === \"glider\"); // console.log(karts, drivers, tires, gliders)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        top: true,\n        cascade: true,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `img/items/${drivers[1].img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"drivers\",\n          id: \"drivers\",\n          children: drivers.map(driver => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: driver,\n              children: driver.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"karts\",\n          id: \"cars\",\n          children: karts.map(kart => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: kart,\n              children: kart.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"tires\",\n          id: \"cars\",\n          children: tires.map(tire => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tire,\n              children: tire.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"gliders\",\n          id: \"cars\",\n          children: gliders.map(glider => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: glider,\n              children: glider.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 32\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Builder, \"K+5zSzeBrA1zekqT+BXfYZEG1a4=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder; // 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useSelector","useDispatch","sampleAction","Chart","MKData","Fade","Builder","driverState","state","sampleReducer","driver","kartState","templateReducer","kart","tireState","tire","gliderState","glider","dispatch","console","log","karts","filter","item","type","drivers","tires","gliders","img","map","name"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {sampleAction} from \"../actions/templateActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\n\nconst Builder = () => {\n    const driverState = useSelector(state => state.sampleReducer.driver)\n    const kartState = useSelector(state => state.templateReducer.kart)\n    const tireState = useSelector(state => state.templateReducer.tire)\n    const gliderState = useSelector(state => state.templateReducer.glider)\n    const dispatch = useDispatch()\n    // useEffect(() => {          // example of syntax if needed\n    //     return () => {\n    //         cleanup\n    //     }\n    // }, [])\n    console.log(driverState)\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n    // console.log(karts, drivers, tires, gliders)\n    return (\n    <>\n        <div>\n            <Fade top cascade>\n                <img src={`img/items/${drivers[1].img}`} />\n                \n                <select name=\"drivers\" id=\"drivers\">\n                    {drivers.map(driver => {\n                        return <option value={driver}>{driver.name}</option>\n                    })}\n                </select>\n                <select name=\"karts\" id=\"cars\">\n                    {karts.map(kart => {\n                        return <option value={kart}>{kart.name}</option>\n                    })}\n                </select>\n                <select name=\"tires\" id=\"cars\">\n                    {tires.map(tire => {\n                        return <option value={tire}>{tire.name}</option>\n                    })}\n                </select>\n                <select name=\"gliders\" id=\"cars\">\n                    {gliders.map(glider => {\n                        return <option value={glider}>{glider.name}</option>\n                    })}\n                </select>\n            </Fade>\n        </div>\n        {/* <Chart \n            type=\"bar\"\n            data={{\n                labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                datasets: [\n                    {\n                        label: \"Driver\",\n                        data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                        backgroundColor: [\n                            'rgba(0, 70, 240, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(0, 70, 240, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Body\",\n                        data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                        backgroundColor: [\n                            'rgba(10, 191, 2, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(10, 191, 2, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Tire\",\n                        data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                        backgroundColor: [\n                            'rgba(255, 245, 16, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 245, 16, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Glider\",\n                        data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                        backgroundColor: [\n                            'rgba(254, 56, 55, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(254, 56, 55, 1)',\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            }}\n            height={100}\n            options={{\n                // indexAxis: \"y\",\n                maintainAspectRatio: true,\n                layout: {\n                    padding: 40\n                },\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'left',\n                        reverse: true,\n                        labels: {\n                            color: 'rgba(255, 255, 255)',\n                            boxHeight: 30,\n                            // padding: 50\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    },\n                    y: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    }\n                }\n            }}\n        /> */}\n    </>\n    )\n}\n\nexport default Builder\n\n// 'rgba(54, 162, 235, 0.5)',\n// 'rgba(255, 206, 86, 0.5)',\n// 'rgba(75, 192, 192, 0.5)',"]},"metadata":{},"sourceType":"module"}