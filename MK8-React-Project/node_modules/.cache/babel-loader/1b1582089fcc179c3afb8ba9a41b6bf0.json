{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadInit, updateDriver, updateKart, updateTire, updateGlider } from \"../actions/builderActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport Fade from \"react-reveal/Fade\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const [formDriver, setFormDriver] = useState(41);\n  const [formKart, setFormKart] = useState(1);\n  const [formTire, setFormTire] = useState(84);\n  const [formGlider, setFormGlider] = useState(105);\n  const driverState = useSelector(state => state.builderReducer.driver);\n  const kartState = useSelector(state => state.builderReducer.kart);\n  const tireState = useSelector(state => state.builderReducer.tire);\n  const gliderState = useSelector(state => state.builderReducer.glider);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadInit());\n  }, []);\n  const karts = MKData.filter(item => item.type === \"kart\");\n  const drivers = MKData.filter(item => item.type === \"driver\");\n  const tires = MKData.filter(item => item.type === \"tire\");\n  const gliders = MKData.filter(item => item.type === \"glider\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        top: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mx-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col w-75 mx-0\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"img/build-a-kart.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mx-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${driverState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 44,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    style: {\n                      width: \"200px\"\n                    },\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"drivers\",\n                    id: \"drivers\",\n                    value: formDriver,\n                    onChange: e => setFormDriver(e.target.value),\n                    children: drivers.map(driver => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: driver.id,\n                        children: driver.name\n                      }, driver.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 49,\n                        columnNumber: 40\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-primary mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateDriver(parseInt(formDriver))),\n                    children: \"Update Driver\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${kartState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"karts\",\n                    id: \"karts\",\n                    value: formKart,\n                    onChange: e => setFormKart(e.target.value),\n                    children: karts.map(kart => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: kart.id,\n                        children: kart.name\n                      }, kart.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 40\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-success mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateKart(parseInt(formKart))),\n                    children: \"Update Body\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${tireState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"tires\",\n                    id: \"tires\",\n                    value: formTire,\n                    onChange: e => setFormTire(e.target.value),\n                    children: tires.map(tire => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: tire.id,\n                        children: tire.name\n                      }, tire.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 40\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-warning mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateTire(parseInt(formTire))),\n                    children: \"Update Tire\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${gliderState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"gliders\",\n                    id: \"gliders\",\n                    value: formGlider,\n                    onChange: e => setFormGlider(e.target.value),\n                    children: gliders.map(glider => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: glider.id,\n                        children: glider.name\n                      }, glider.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 40\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn btn-danger mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateGlider(parseInt(formGlider))),\n                    children: \"Update Glider\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"ADD TO KART\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          type: \"bar\",\n          data: {\n            labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n            datasets: [{\n              label: \"Driver\",\n              data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n              backgroundColor: ['rgba(0, 70, 240, 0.8)'],\n              borderColor: ['rgba(0, 70, 240, 1)'],\n              borderWidth: 1\n            }, {\n              label: \"Body\",\n              data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n              backgroundColor: ['rgba(10, 191, 2, 0.8)'],\n              borderColor: ['rgba(10, 191, 2, 1)'],\n              borderWidth: 1\n            }, {\n              label: \"Tire\",\n              data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n              backgroundColor: ['rgba(255, 245, 16, 0.8)'],\n              borderColor: ['rgba(255, 245, 16, 1)'],\n              borderWidth: 1\n            }, {\n              label: \"Glider\",\n              data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n              backgroundColor: ['rgba(254, 56, 55, 0.8)'],\n              borderColor: ['rgba(254, 56, 55, 1)'],\n              borderWidth: 1\n            }]\n          },\n          height: 45,\n          width: 100,\n          options: {\n            // indexAxis: \"y\",\n            maintainAspectRatio: true,\n            layout: {// padding: 20\n            },\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'bottom',\n                reverse: false,\n                labels: {\n                  color: 'rgba(255, 255, 255)',\n                  boxHeight: 25,\n                  padding: 30\n                }\n              }\n            },\n            scales: {\n              x: {\n                stacked: true,\n                ticks: {\n                  color: 'rgba(255, 255, 255)'\n                }\n              },\n              y: {\n                stacked: true,\n                ticks: {\n                  color: 'rgba(255, 255, 255)'\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Builder, \"Qm7fYC/BoNvon09jHT1onFSLJNw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useState","useSelector","useDispatch","loadInit","updateDriver","updateKart","updateTire","updateGlider","Chart","MKData","Fade","Button","Form","Builder","formDriver","setFormDriver","formKart","setFormKart","formTire","setFormTire","formGlider","setFormGlider","driverState","state","builderReducer","driver","kartState","kart","tireState","tire","gliderState","glider","dispatch","karts","filter","item","type","drivers","tires","gliders","img","width","e","target","value","map","id","name","parseInt","labels","datasets","label","data","wg","ac","on","of","mt","sl","sw","sa","sg","tl","tw","ta","tg","backgroundColor","borderColor","borderWidth","maintainAspectRatio","layout","responsive","plugins","legend","position","reverse","color","boxHeight","padding","scales","x","stacked","ticks","y"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,UAAhC,EAA4CC,UAA5C,EAAwDC,YAAxD,QAA2E,2BAA3E;AACA,OAAO,eAAP;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAMsB,WAAW,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,MAA/B,CAA/B;AACA,QAAMC,SAAS,GAAGzB,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBG,IAA/B,CAA7B;AACA,QAAMC,SAAS,GAAG3B,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBK,IAA/B,CAA7B;AACA,QAAMC,WAAW,GAAG7B,WAAW,CAACsB,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBO,MAA/B,CAA/B;AACA,QAAMC,QAAQ,GAAG9B,WAAW,EAA5B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,QAAQ,CAAC7B,QAAQ,EAAT,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM8B,KAAK,GAAGxB,MAAM,CAACyB,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,MAApC,CAAd;AACA,QAAMC,OAAO,GAAG5B,MAAM,CAACyB,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,QAApC,CAAhB;AACA,QAAME,KAAK,GAAG7B,MAAM,CAACyB,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,MAApC,CAAd;AACA,QAAMG,OAAO,GAAG9B,MAAM,CAACyB,MAAP,CAAcC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,QAApC,CAAhB;AAEA,sBACA;AAAA,4BACI;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,GAAG,MAAT;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,qCACI;AAAK,gBAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOA;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA,qCACA,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,wCACI;AAAA,yCACI;AAAK,oBAAA,GAAG,EAAG,aAAYd,WAAW,CAACkB,GAAI;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAA,0CACA,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,KAAK,EAAE;AAACC,sBAAAA,KAAK,EAAE;AAAR,qBAApB;AAAsC,oBAAA,SAAS,EAAC,qCAAhD;AAAsF,oBAAA,IAAI,EAAC,SAA3F;AAAqG,oBAAA,EAAE,EAAC,SAAxG;AAAkH,oBAAA,KAAK,EAAE3B,UAAzH;AAAqI,oBAAA,QAAQ,EAAG4B,CAAD,IAAO3B,aAAa,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnK;AAAA,8BACKP,OAAO,CAACQ,GAAR,CAAYpB,MAAM,IAAI;AACnB,0CAAO;AAAwB,wBAAA,KAAK,EAAEA,MAAM,CAACqB,EAAtC;AAAA,kCAA2CrB,MAAM,CAACsB;AAAlD,yBAAatB,MAAM,CAACqB,EAApB;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,qBAFA;AADL;AAAA;AAAA;AAAA;AAAA,0BADA,eAMA,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,iCAAlB;AAAoD,oBAAA,IAAI,EAAC,QAAzD;AAAkE,oBAAA,KAAK,EAAC,QAAxE;AAAiF,oBAAA,OAAO,EAAE,MAAMd,QAAQ,CAAC5B,YAAY,CAAC4C,QAAQ,CAAClC,UAAD,CAAT,CAAb,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAgBI;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA,qCACA,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,wCACI;AAAA,yCACI;AAAK,oBAAA,GAAG,EAAG,aAAYY,SAAS,CAACc,GAAI;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAA,0CACA,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,SAAS,EAAC,qCAAvB;AAA6D,oBAAA,IAAI,EAAC,OAAlE;AAA0E,oBAAA,EAAE,EAAC,OAA7E;AAAqF,oBAAA,KAAK,EAAExB,QAA5F;AAAsG,oBAAA,QAAQ,EAAG0B,CAAD,IAAOzB,WAAW,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlI;AAAA,8BACKX,KAAK,CAACY,GAAN,CAAUlB,IAAI,IAAI;AACf,0CAAO;AAAsB,wBAAA,KAAK,EAAEA,IAAI,CAACmB,EAAlC;AAAA,kCAAuCnB,IAAI,CAACoB;AAA5C,yBAAapB,IAAI,CAACmB,EAAlB;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,qBAFA;AADL;AAAA;AAAA;AAAA;AAAA,0BADA,eAMA,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,iCAAlB;AAAoD,oBAAA,IAAI,EAAC,QAAzD;AAAkE,oBAAA,KAAK,EAAC,QAAxE;AAAiF,oBAAA,OAAO,EAAE,MAAMd,QAAQ,CAAC3B,UAAU,CAAC2C,QAAQ,CAAChC,QAAD,CAAT,CAAX,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eA+BI;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA,qCACA,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,wCACI;AAAA,yCACI;AAAK,oBAAA,GAAG,EAAG,aAAYY,SAAS,CAACY,GAAI;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAA,0CACA,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,SAAS,EAAC,qCAAvB;AAA6D,oBAAA,IAAI,EAAC,OAAlE;AAA0E,oBAAA,EAAE,EAAC,OAA7E;AAAqF,oBAAA,KAAK,EAAEtB,QAA5F;AAAsG,oBAAA,QAAQ,EAAGwB,CAAD,IAAOvB,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlI;AAAA,8BACKN,KAAK,CAACO,GAAN,CAAUhB,IAAI,IAAI;AACf,0CAAO;AAAsB,wBAAA,KAAK,EAAEA,IAAI,CAACiB,EAAlC;AAAA,kCAAuCjB,IAAI,CAACkB;AAA5C,yBAAalB,IAAI,CAACiB,EAAlB;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,qBAFA;AADL;AAAA;AAAA;AAAA;AAAA,0BADA,eAMA,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,iCAAlB;AAAoD,oBAAA,IAAI,EAAC,QAAzD;AAAkE,oBAAA,KAAK,EAAC,QAAxE;AAAiF,oBAAA,OAAO,EAAE,MAAMd,QAAQ,CAAC1B,UAAU,CAAC0C,QAAQ,CAAC9B,QAAD,CAAT,CAAX,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBA/BJ,eA8CI;AAAK,cAAA,SAAS,EAAC,mCAAf;AAAA,qCACA,QAAC,IAAD;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA,wCACI;AAAA,yCACI;AAAK,oBAAA,GAAG,EAAG,aAAYY,WAAW,CAACU,GAAI;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAA,0CACA,QAAC,IAAD,CAAM,MAAN;AAAa,oBAAA,SAAS,EAAC,qCAAvB;AAA6D,oBAAA,IAAI,EAAC,SAAlE;AAA4E,oBAAA,EAAE,EAAC,SAA/E;AAAyF,oBAAA,KAAK,EAAEpB,UAAhG;AAA4G,oBAAA,QAAQ,EAAGsB,CAAD,IAAOrB,aAAa,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1I;AAAA,8BACKL,OAAO,CAACM,GAAR,CAAYd,MAAM,IAAI;AACnB,0CAAO;AAAwB,wBAAA,KAAK,EAAEA,MAAM,CAACe,EAAtC;AAAA,kCAA2Cf,MAAM,CAACgB;AAAlD,yBAAahB,MAAM,CAACe,EAApB;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,qBAFA;AADL;AAAA;AAAA;AAAA;AAAA,0BADA,eAMA,QAAC,MAAD;AAAQ,oBAAA,SAAS,EAAC,gCAAlB;AAAmD,oBAAA,IAAI,EAAC,QAAxD;AAAiE,oBAAA,KAAK,EAAC,QAAvE;AAAgF,oBAAA,OAAO,EAAE,MAAMd,QAAQ,CAACzB,YAAY,CAACyC,QAAQ,CAAC5B,UAAD,CAAT,CAAb,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBA9CJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eA2EI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACA,QAAC,IAAD;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA,iCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,KADT;AAEI,UAAA,IAAI,EAAE;AACF6B,YAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,cAAX,EAA2B,kBAA3B,EAA+C,mBAA/C,EAAoE,YAApE,EAAkF,cAAlF,EAAkG,aAAlG,EAAiH,oBAAjH,EAAuI,WAAvI,EAAoJ,iBAApJ,EAAuK,gBAAvK,EAAyL,uBAAzL,EAAkN,cAAlN,CADN;AAEFC,YAAAA,QAAQ,EAAE,CACN;AACIC,cAAAA,KAAK,EAAE,QADX;AAEIC,cAAAA,IAAI,EAAE,CAAC9B,WAAW,CAAC+B,EAAb,EAAiB/B,WAAW,CAACgC,EAA7B,EAAiChC,WAAW,CAACiC,EAA7C,EAAiDjC,WAAW,CAACkC,EAA7D,EAAiElC,WAAW,CAACmC,EAA7E,EAAiFnC,WAAW,CAACoC,EAA7F,EAAiGpC,WAAW,CAACqC,EAA7G,EAAiHrC,WAAW,CAACsC,EAA7H,EAAiItC,WAAW,CAACuC,EAA7I,EAAiJvC,WAAW,CAACwC,EAA7J,EAAiKxC,WAAW,CAACyC,EAA7K,EAAiLzC,WAAW,CAAC0C,EAA7L,EAAiM1C,WAAW,CAAC2C,EAA7M,CAFV;AAGIC,cAAAA,eAAe,EAAE,CACb,uBADa,CAHrB;AAMIC,cAAAA,WAAW,EAAE,CACT,qBADS,CANjB;AASIC,cAAAA,WAAW,EAAE;AATjB,aADM,EAYN;AACIjB,cAAAA,KAAK,EAAE,MADX;AAEIC,cAAAA,IAAI,EAAE,CAAC1B,SAAS,CAAC2B,EAAX,EAAe3B,SAAS,CAAC4B,EAAzB,EAA6B5B,SAAS,CAAC6B,EAAvC,EAA2C7B,SAAS,CAAC8B,EAArD,EAAyD9B,SAAS,CAAC+B,EAAnE,EAAuE/B,SAAS,CAACgC,EAAjF,EAAqFhC,SAAS,CAACiC,EAA/F,EAAmGjC,SAAS,CAACkC,EAA7G,EAAiHlC,SAAS,CAACmC,EAA3H,EAA+HnC,SAAS,CAACoC,EAAzI,EAA6IpC,SAAS,CAACqC,EAAvJ,EAA2JrC,SAAS,CAACsC,EAArK,EAAyKtC,SAAS,CAACuC,EAAnL,CAFV;AAGIC,cAAAA,eAAe,EAAE,CACb,uBADa,CAHrB;AAMIC,cAAAA,WAAW,EAAE,CACT,qBADS,CANjB;AASIC,cAAAA,WAAW,EAAE;AATjB,aAZM,EAuBN;AACIjB,cAAAA,KAAK,EAAE,MADX;AAEIC,cAAAA,IAAI,EAAE,CAACxB,SAAS,CAACyB,EAAX,EAAezB,SAAS,CAAC0B,EAAzB,EAA6B1B,SAAS,CAAC2B,EAAvC,EAA2C3B,SAAS,CAAC4B,EAArD,EAAyD5B,SAAS,CAAC6B,EAAnE,EAAuE7B,SAAS,CAAC8B,EAAjF,EAAqF9B,SAAS,CAAC+B,EAA/F,EAAmG/B,SAAS,CAACgC,EAA7G,EAAiHhC,SAAS,CAACiC,EAA3H,EAA+HjC,SAAS,CAACkC,EAAzI,EAA6IlC,SAAS,CAACmC,EAAvJ,EAA2JnC,SAAS,CAACoC,EAArK,EAAyKpC,SAAS,CAACqC,EAAnL,CAFV;AAGIC,cAAAA,eAAe,EAAE,CACb,yBADa,CAHrB;AAMIC,cAAAA,WAAW,EAAE,CACT,uBADS,CANjB;AASIC,cAAAA,WAAW,EAAE;AATjB,aAvBM,EAkCN;AACIjB,cAAAA,KAAK,EAAE,QADX;AAEIC,cAAAA,IAAI,EAAE,CAACtB,WAAW,CAACuB,EAAb,EAAiBvB,WAAW,CAACwB,EAA7B,EAAiCxB,WAAW,CAACyB,EAA7C,EAAiDzB,WAAW,CAAC0B,EAA7D,EAAiE1B,WAAW,CAAC2B,EAA7E,EAAiF3B,WAAW,CAAC4B,EAA7F,EAAiG5B,WAAW,CAAC6B,EAA7G,EAAiH7B,WAAW,CAAC8B,EAA7H,EAAiI9B,WAAW,CAAC+B,EAA7I,EAAiJ/B,WAAW,CAACgC,EAA7J,EAAiKhC,WAAW,CAACiC,EAA7K,EAAiLjC,WAAW,CAACkC,EAA7L,EAAiMlC,WAAW,CAACmC,EAA7M,CAFV;AAGIC,cAAAA,eAAe,EAAE,CACb,wBADa,CAHrB;AAMIC,cAAAA,WAAW,EAAE,CACT,sBADS,CANjB;AASIC,cAAAA,WAAW,EAAE;AATjB,aAlCM;AAFR,WAFV;AAmDI,UAAA,MAAM,EAAE,EAnDZ;AAoDI,UAAA,KAAK,EAAE,GApDX;AAqDI,UAAA,OAAO,EAAE;AACL;AACAC,YAAAA,mBAAmB,EAAE,IAFhB;AAGLC,YAAAA,MAAM,EAAE,CACJ;AADI,aAHH;AAMLC,YAAAA,UAAU,EAAE,IANP;AAOLC,YAAAA,OAAO,EAAE;AACLC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,QAAQ,EAAE,QADN;AAEJC,gBAAAA,OAAO,EAAE,KAFL;AAGJ1B,gBAAAA,MAAM,EAAE;AACJ2B,kBAAAA,KAAK,EAAE,qBADH;AAEJC,kBAAAA,SAAS,EAAE,EAFP;AAGJC,kBAAAA,OAAO,EAAE;AAHL;AAHJ;AADH,aAPJ;AAkBLC,YAAAA,MAAM,EAAE;AACJC,cAAAA,CAAC,EAAE;AACCC,gBAAAA,OAAO,EAAE,IADV;AAECC,gBAAAA,KAAK,EAAE;AACHN,kBAAAA,KAAK,EAAE;AADJ;AAFR,eADC;AAOJO,cAAAA,CAAC,EAAE;AACCF,gBAAAA,OAAO,EAAE,IADV;AAECC,gBAAAA,KAAK,EAAE;AACHN,kBAAAA,KAAK,EAAE;AADJ;AAFR;AAPC;AAlBH;AArDb;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YA3EJ;AAAA,kBADA;AA4KH,CA9LD;;GAAM/D,O;UAKkBZ,W,EACFA,W,EACAA,W,EACEA,W,EACHC,W;;;KATfW,O;AAgMN,eAAeA,OAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {loadInit, updateDriver, updateKart, updateTire, updateGlider} from \"../actions/builderActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\n\nconst Builder = () => {\n    const [formDriver, setFormDriver] = useState(41)\n    const [formKart, setFormKart] = useState(1)\n    const [formTire, setFormTire] = useState(84)\n    const [formGlider, setFormGlider] = useState(105)\n    const driverState = useSelector(state => state.builderReducer.driver)\n    const kartState = useSelector(state => state.builderReducer.kart)\n    const tireState = useSelector(state => state.builderReducer.tire)\n    const gliderState = useSelector(state => state.builderReducer.glider)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadInit())\n    }, [])\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n\n    return (\n    <>\n        <div>\n            <Fade top>\n                <div className=\"container\">\n                    <div className=\"row mx-0\">\n                        <div className=\"col w-75 mx-0\">\n                            <img src=\"img/build-a-kart.png\" />\n                        </div>\n                        \n                    </div>\n                <div className=\"row mx-0\">\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form className=\"text-center\">\n                        <div>\n                            <img src={`img/items/${driverState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select style={{width: \"200px\"}} className=\"bg-dark mt-1 text-center text-white\" name=\"drivers\" id=\"drivers\" value={formDriver} onChange={(e) => setFormDriver(e.target.value)}>\n                            {drivers.map(driver => {\n                                return <option key={driver.id} value={driver.id}>{driver.name}</option>\n                            })}\n                        </Form.Select>\n                        <Button className=\"btn btn-primary mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(parseInt(formDriver)))}>Update Driver</Button>\n                        </div>\n                    </Form>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form className=\"text-center\">\n                        <div>\n                            <img src={`img/items/${kartState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"karts\" id=\"karts\" value={formKart} onChange={(e) => setFormKart(e.target.value)}>\n                            {karts.map(kart => {\n                                return <option key={kart.id} value={kart.id}>{kart.name}</option>\n                            })}\n                        </Form.Select>\n                        <Button className=\"btn btn-success mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateKart(parseInt(formKart)))}>Update Body</Button>\n                        </div>\n                    </Form>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form className=\"text-center\">\n                        <div>\n                            <img src={`img/items/${tireState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"tires\" id=\"tires\" value={formTire} onChange={(e) => setFormTire(e.target.value)}>\n                            {tires.map(tire => {\n                                return <option key={tire.id} value={tire.id}>{tire.name}</option>\n                            })}\n                        </Form.Select>\n                        <Button className=\"btn btn-warning mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateTire(parseInt(formTire)))}>Update Tire</Button>\n                        </div>\n                    </Form>\n                    </div>\n                    <div className=\"col d-flex justify-content-center\">\n                    <Form className=\"text-center\">\n                        <div>\n                            <img src={`img/items/${gliderState.img}`} />\n                        </div>\n                        <div>\n                        <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"gliders\" id=\"gliders\" value={formGlider} onChange={(e) => setFormGlider(e.target.value)}>\n                            {gliders.map(glider => {\n                                return <option key={glider.id} value={glider.id}>{glider.name}</option>\n                            })}\n                        </Form.Select>\n                        <Button className=\"btn btn-danger mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateGlider(parseInt(formGlider)))}>Update Glider</Button>\n                        </div>\n                    </Form>\n                    </div>\n                </div>\n                </div>\n            </Fade>\n        </div>\n        <div className=\"container\">\n        <Fade>\n        <div className=\"col d-flex justify-content-center\">\n            <Button>ADD TO KART</Button>\n        </div>\n        <Chart \n            type=\"bar\"\n            data={{\n                labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                datasets: [\n                    {\n                        label: \"Driver\",\n                        data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                        backgroundColor: [\n                            'rgba(0, 70, 240, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(0, 70, 240, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Body\",\n                        data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                        backgroundColor: [\n                            'rgba(10, 191, 2, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(10, 191, 2, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Tire\",\n                        data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                        backgroundColor: [\n                            'rgba(255, 245, 16, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(255, 245, 16, 1)',\n                        ],\n                        borderWidth: 1\n                    },\n                    {\n                        label: \"Glider\",\n                        data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                        backgroundColor: [\n                            'rgba(254, 56, 55, 0.8)',\n                        ],\n                        borderColor: [\n                            'rgba(254, 56, 55, 1)',\n                        ],\n                        borderWidth: 1\n                    }\n                ]\n            }}\n            height={45}\n            width={100}\n            options={{\n                // indexAxis: \"y\",\n                maintainAspectRatio: true,\n                layout: {\n                    // padding: 20\n                },\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'bottom',\n                        reverse: false,\n                        labels: {\n                            color: 'rgba(255, 255, 255)',\n                            boxHeight: 25,\n                            padding: 30\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    },\n                    y: {\n                        stacked: true,\n                        ticks: {\n                            color: 'rgba(255, 255, 255)'\n                        }\n                    }\n                }\n            }}\n        />\n        </Fade>\n        </div>\n    </>\n    )\n}\n\nexport default Builder"]},"metadata":{},"sourceType":"module"}