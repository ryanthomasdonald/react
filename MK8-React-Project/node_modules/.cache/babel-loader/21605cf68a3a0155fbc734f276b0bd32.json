{"ast":null,"code":"var _jsxFileName = \"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loadInit, updateDriver, updateKart, updateTire, updateGlider, addToCart } from \"../actions/builderActions\";\nimport \"chart.js/auto\";\nimport { Chart } from \"react-chartjs-2\";\nimport MKData from \"../assets/MK8-data.js\";\nimport Fade from \"react-reveal/Fade\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Link } from \"react-router-dom\";\nimport \"./Builder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Builder = () => {\n  _s();\n\n  const [formDriver, setFormDriver] = useState(41);\n  const [formKart, setFormKart] = useState(1);\n  const [formTire, setFormTire] = useState(84);\n  const [formGlider, setFormGlider] = useState(105);\n  const driverState = useSelector(state => state.builderReducer.driver);\n  const kartState = useSelector(state => state.builderReducer.kart);\n  const tireState = useSelector(state => state.builderReducer.tire);\n  const gliderState = useSelector(state => state.builderReducer.glider);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadInit());\n  }, []);\n  const karts = MKData.filter(item => item.type === \"kart\");\n  const drivers = MKData.filter(item => item.type === \"driver\");\n  const tires = MKData.filter(item => item.type === \"tire\");\n  const gliders = MKData.filter(item => item.type === \"glider\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        top: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row pt-2 pb-2 mx-0 justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"750px\"\n              },\n              src: \"img/build-a-kart.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mx-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col col-lg col-md-6 d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${driverState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 45,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    style: {\n                      width: \"200px\"\n                    },\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"drivers\",\n                    id: \"drivers\",\n                    value: formDriver,\n                    onChange: e => setFormDriver(e.target.value),\n                    children: drivers.map(driver => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: driver.id,\n                        children: driver.name\n                      }, driver.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 50,\n                        columnNumber: 52\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn button-blue mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateDriver(parseInt(formDriver))),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      width: \"150px\",\n                      src: \"/img/update-button.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 179\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 53,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${kartState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"karts\",\n                    id: \"karts\",\n                    value: formKart,\n                    onChange: e => setFormKart(e.target.value),\n                    children: karts.map(kart => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: kart.id,\n                        children: kart.name\n                      }, kart.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 52\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn button-green mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateKart(parseInt(formKart))),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      width: \"150px\",\n                      src: \"/img/update-button.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 176\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${tireState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"tires\",\n                    id: \"tires\",\n                    value: formTire,\n                    onChange: e => setFormTire(e.target.value),\n                    children: tires.map(tire => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: tire.id,\n                        children: tire.name\n                      }, tire.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 80,\n                        columnNumber: 52\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn button-yellow mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateTire(parseInt(formTire))),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      width: \"150px\",\n                      src: \"/img/update-button.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 177\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                className: \"text-center pt-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: `img/items/${gliderState.img}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Select, {\n                    className: \"bg-dark mt-1 text-center text-white\",\n                    name: \"gliders\",\n                    id: \"gliders\",\n                    value: formGlider,\n                    onChange: e => setFormGlider(e.target.value),\n                    children: gliders.map(glider => {\n                      return /*#__PURE__*/_jsxDEV(\"option\", {\n                        value: glider.id,\n                        children: glider.name\n                      }, glider.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 52\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"btn button-red mt-2 text-white\",\n                    type: \"button\",\n                    value: \"submit\",\n                    onClick: () => dispatch(updateGlider(parseInt(formGlider))),\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      width: \"150px\",\n                      src: \"/img/update-button.png\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 178\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col d-flex pt-4 justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/cart\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn button-gray mt-3 mb-3\",\n                type: \"button\",\n                value: \"submit\",\n                onClick: () => dispatch(addToCart(formDriver, formKart, formTire, formGlider)),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  width: \"450px\",\n                  src: \"/img/add-to-kart.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 184\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mb-5\",\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row mx-0 pt-5 pb-4 justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                width: \"700px\"\n              },\n              src: \"img/kart-chart.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          className: \"chart-mq\",\n          type: \"bar\",\n          data: {\n            labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n            datasets: [{\n              label: \"Driver\",\n              data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n              backgroundColor: ['rgba(0, 70, 240, 1)'],\n              borderColor: ['rgba(0, 70, 240, 1)'],\n              borderWidth: 1\n            }, {\n              label: \"Body\",\n              data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n              backgroundColor: ['rgba(10, 191, 2, 1)'],\n              borderColor: ['rgba(10, 191, 2, 1)'],\n              borderWidth: 1\n            }, {\n              label: \"Tire\",\n              data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n              backgroundColor: ['rgba(255, 245, 16, 1)'],\n              borderColor: ['rgba(255, 245, 16, 1)'],\n              borderWidth: 1\n            }, {\n              label: \"Glider\",\n              data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n              backgroundColor: ['rgba(254, 56, 55, 1)'],\n              borderColor: ['rgba(254, 56, 55, 1)'],\n              borderWidth: 1\n            }]\n          } // height={45}\n          // width={100}\n          ,\n          options: {\n            // indexAxis: \"y\",\n            maintainAspectRatio: true,\n            aspectRatio: 1.7,\n            layout: {// padding: 20\n            },\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'bottom',\n                reverse: false,\n                labels: {\n                  color: 'rgba(255, 255, 255)',\n                  boxHeight: 25,\n                  padding: 30\n                }\n              }\n            },\n            scales: {\n              x: {\n                stacked: true,\n                ticks: {\n                  color: 'rgba(255, 255, 255)'\n                }\n              },\n              y: {\n                stacked: true,\n                ticks: {\n                  color: 'rgba(255, 255, 255)'\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Builder, \"Qm7fYC/BoNvon09jHT1onFSLJNw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Builder;\nexport default Builder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js"],"names":["React","useEffect","useState","useSelector","useDispatch","loadInit","updateDriver","updateKart","updateTire","updateGlider","addToCart","Chart","MKData","Fade","Button","Form","Link","Builder","formDriver","setFormDriver","formKart","setFormKart","formTire","setFormTire","formGlider","setFormGlider","driverState","state","builderReducer","driver","kartState","kart","tireState","tire","gliderState","glider","dispatch","karts","filter","item","type","drivers","tires","gliders","width","img","e","target","value","map","id","name","parseInt","labels","datasets","label","data","wg","ac","on","of","mt","sl","sw","sa","sg","tl","tw","ta","tg","backgroundColor","borderColor","borderWidth","maintainAspectRatio","aspectRatio","layout","responsive","plugins","legend","position","reverse","color","boxHeight","padding","scales","x","stacked","ticks","y"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {loadInit, updateDriver, updateKart, updateTire, updateGlider, addToCart} from \"../actions/builderActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport {Link} from \"react-router-dom\"\nimport \"./Builder.css\"\n\nconst Builder = () => {\n    const [formDriver, setFormDriver] = useState(41)\n    const [formKart, setFormKart] = useState(1)\n    const [formTire, setFormTire] = useState(84)\n    const [formGlider, setFormGlider] = useState(105)\n    const driverState = useSelector(state => state.builderReducer.driver)\n    const kartState = useSelector(state => state.builderReducer.kart)\n    const tireState = useSelector(state => state.builderReducer.tire)\n    const gliderState = useSelector(state => state.builderReducer.glider)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadInit())\n    }, [])\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n\n    return (\n    <>\n        <div>\n            <Fade top>\n                <div className=\"container\">\n                    <div className=\"row pt-2 pb-2 mx-0 justify-content-center\">\n                        <img style={{width: \"750px\"}} src=\"img/build-a-kart.png\" />\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row mx-0\">\n                        <div className=\"col col-lg col-md-6 d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${driverState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select style={{width: \"200px\"}} className=\"bg-dark mt-1 text-center text-white\" name=\"drivers\" id=\"drivers\" value={formDriver} onChange={(e) => setFormDriver(e.target.value)}>\n                                        {drivers.map(driver => {\n                                            return <option key={driver.id} value={driver.id}>{driver.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-blue mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(parseInt(formDriver)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"col d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${kartState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"karts\" id=\"karts\" value={formKart} onChange={(e) => setFormKart(e.target.value)}>\n                                        {karts.map(kart => {\n                                            return <option key={kart.id} value={kart.id}>{kart.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-green mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateKart(parseInt(formKart)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"col d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${tireState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"tires\" id=\"tires\" value={formTire} onChange={(e) => setFormTire(e.target.value)}>\n                                        {tires.map(tire => {\n                                            return <option key={tire.id} value={tire.id}>{tire.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-yellow mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateTire(parseInt(formTire)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"col d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${gliderState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"gliders\" id=\"gliders\" value={formGlider} onChange={(e) => setFormGlider(e.target.value)}>\n                                        {gliders.map(glider => {\n                                            return <option key={glider.id} value={glider.id}>{glider.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-red mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateGlider(parseInt(formGlider)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                    <div className=\"col d-flex pt-4 justify-content-center\">\n                        <Link to=\"/cart\">\n                            <Button className=\"btn button-gray mt-3 mb-3\" type=\"button\" value=\"submit\" onClick={() => dispatch(addToCart(formDriver, formKart, formTire, formGlider))}><img width=\"450px\" src=\"/img/add-to-kart.png\" /></Button>\n                        </Link>\n                    </div>\n                </div>\n            </Fade>\n        </div>\n        <div className=\"container mb-5\">\n            <Fade>\n                <div className=\"container\">\n                    <div className=\"row mx-0 pt-5 pb-4 justify-content-center\">\n                        <img style={{width: \"700px\"}} src=\"img/kart-chart.png\" />\n                    </div>\n                </div>\n                <Chart\n                    className=\"chart-mq\"\n                    type=\"bar\"\n                    data={{\n                        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                        datasets: [\n                            {\n                                label: \"Driver\",\n                                data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                                backgroundColor: [\n                                    'rgba(0, 70, 240, 1)',\n                                ],\n                                borderColor: [\n                                    'rgba(0, 70, 240, 1)',\n                                ],\n                                borderWidth: 1\n                            },\n                            {\n                                label: \"Body\",\n                                data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                                backgroundColor: [\n                                    'rgba(10, 191, 2, 1)',\n                                ],\n                                borderColor: [\n                                    'rgba(10, 191, 2, 1)',\n                                ],\n                                borderWidth: 1\n                            },\n                            {\n                                label: \"Tire\",\n                                data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                                backgroundColor: [\n                                    'rgba(255, 245, 16, 1)',\n                                ],\n                                borderColor: [\n                                    'rgba(255, 245, 16, 1)',\n                                ],\n                                borderWidth: 1\n                            },\n                            {\n                                label: \"Glider\",\n                                data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                                backgroundColor: [\n                                    'rgba(254, 56, 55, 1)',\n                                ],\n                                borderColor: [\n                                    'rgba(254, 56, 55, 1)',\n                                ],\n                                borderWidth: 1\n                            }\n                        ]\n                    }}\n                    // height={45}\n                    // width={100}\n                    options={{\n                        // indexAxis: \"y\",\n                        maintainAspectRatio: true,\n                        aspectRatio: 1.7,\n                        layout: {\n                            // padding: 20\n                        },\n                        responsive: true,\n                        plugins: {\n                            legend: {\n                                position: 'bottom',\n                                reverse: false,\n                                labels: {\n                                    color: 'rgba(255, 255, 255)',\n                                    boxHeight: 25,\n                                    padding: 30\n                                }\n                            }\n                        },\n                        scales: {\n                            x: {\n                                stacked: true,\n                                ticks: {\n                                    color: 'rgba(255, 255, 255)'\n                                }\n                            },\n                            y: {\n                                stacked: true,\n                                ticks: {\n                                    color: 'rgba(255, 255, 255)'\n                                }\n                            }\n                        }\n                    }}\n                />\n            </Fade>\n        </div>\n    </>\n    )\n}\n\nexport default Builder"]},"metadata":{},"sourceType":"module"}